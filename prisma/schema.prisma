// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int           @id @default(autoincrement())
  email             String        @unique
  password          String
  firstName         String
  lastName          String
  role              String
  Books             Book[]        @relation("Books")
  createdBooks      Book[]        @relation("CreatedBooks")
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @default(now()) @updatedAt
  createdBookGenres BookGeneres[] @relation("GenereCreatedBy")
}

model BookGeneres {
  id               Int           @id @default(autoincrement())
  name             String
  shortDescription String
  parent           BookGeneres?  @relation("SubGeneres", fields: [parentId], references: [id])
  parentId         Int?
  createdBy        User?         @relation("GenereCreatedBy", fields: [createdById], references: [id])
  createdById      Int?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  Book             Book[]
  subGeneres       BookGeneres[] @relation("SubGeneres")
}

model Book {
  id            Int         @id @default(autoincrement())
  title         String
  authorName    String
  tags          String[]
  bookGeneres   BookGeneres @relation(fields: [bookGeneresId], references: [id])
  bookGeneresId Int
  user          User        @relation("Books", fields: [userId], references: [id])
  userId        Int
  createdBy     User?       @relation("CreatedBooks", fields: [createdById], references: [id])
  createdById   Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
